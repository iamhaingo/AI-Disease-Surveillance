{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1AuRqTGKhLlpvrBNUYK-sY9dtlrBSbMW8","timestamp":1713480339665}],"collapsed_sections":["vzlI4tQ1J9Kc"],"authorship_tag":"ABX9TyNauBGcmBp62fBfhKvhtXv5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"8e16aa0d1ea0423c8a314f9b13ff4028":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3626f1c09fbe438798fa99e5fbb95279","IPY_MODEL_51df811a58024b5c9e44c7efae1ef5c3","IPY_MODEL_44a44cd9bf25449bbb53985bf4e25508"],"layout":"IPY_MODEL_015ec6462cd44b539ae9cb5a233d8db9"}},"3626f1c09fbe438798fa99e5fbb95279":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d946112cd5de4413abe7dee852503b2d","placeholder":"​","style":"IPY_MODEL_45006750da5740e9a19fccaf0d0e92e3","value":"Map: 100%"}},"51df811a58024b5c9e44c7efae1ef5c3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0078ad77e41c4a9f807aec883f127b3f","max":4911,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e551293b3064443aaea983758e3d9dbb","value":4911}},"44a44cd9bf25449bbb53985bf4e25508":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_85aded2b68b543e293c4b0653786897b","placeholder":"​","style":"IPY_MODEL_d24146c281fa49778ae6baefa46d505f","value":" 4911/4911 [00:00&lt;00:00, 12232.42 examples/s]"}},"015ec6462cd44b539ae9cb5a233d8db9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d946112cd5de4413abe7dee852503b2d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"45006750da5740e9a19fccaf0d0e92e3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0078ad77e41c4a9f807aec883f127b3f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e551293b3064443aaea983758e3d9dbb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"85aded2b68b543e293c4b0653786897b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d24146c281fa49778ae6baefa46d505f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4c1b70e21fec4a00bf9aafb8fe7e1a21":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ce38423118ac44119d578fed0bdf47a5","IPY_MODEL_c17d37fa56174387bf383aec10a761eb","IPY_MODEL_645059038c3948be9ef2f7158ac47460"],"layout":"IPY_MODEL_0e71d30ccbf4484b9c592b0d4e6f09b2"}},"ce38423118ac44119d578fed0bdf47a5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0390347d81ab4bd292f84c317eb2ccfa","placeholder":"​","style":"IPY_MODEL_a92ccca3f5a44c2e9d3f70762f08d6c1","value":"Map: 100%"}},"c17d37fa56174387bf383aec10a761eb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7bdbd55ceb18487bb27b9d62cda7ef9a","max":3683,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0f13c67ee2514bdcab1650cc3ed2acfb","value":3683}},"645059038c3948be9ef2f7158ac47460":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ded824cba550421aaa39624b7e98d429","placeholder":"​","style":"IPY_MODEL_f3c3cd55c2834826ba3901ffcd653eb8","value":" 3683/3683 [00:00&lt;00:00, 5436.99 examples/s]"}},"0e71d30ccbf4484b9c592b0d4e6f09b2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0390347d81ab4bd292f84c317eb2ccfa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a92ccca3f5a44c2e9d3f70762f08d6c1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7bdbd55ceb18487bb27b9d62cda7ef9a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0f13c67ee2514bdcab1650cc3ed2acfb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ded824cba550421aaa39624b7e98d429":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f3c3cd55c2834826ba3901ffcd653eb8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f4086c64785e406f833ca555cca837b1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2cf7c7fe43ed4d308d6785a67c5ec7d0","IPY_MODEL_ba2dac36ba684b46a542e94298298223","IPY_MODEL_18d8adf2704046c7ae884efa8f35f5b7"],"layout":"IPY_MODEL_da52914f39894c479c776cccc1d6f170"}},"2cf7c7fe43ed4d308d6785a67c5ec7d0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_365df20c9ce04355bae295f0447d55a1","placeholder":"​","style":"IPY_MODEL_bb126eb66df44bbe9ef2cd4a53a71636","value":"Map: 100%"}},"ba2dac36ba684b46a542e94298298223":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9a01682b084245c49e572a83a76adc61","max":614,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4a44b0dc9c2f4c7aa327be442e96f2bc","value":614}},"18d8adf2704046c7ae884efa8f35f5b7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_558b07c98a3c4fdcb8469caf9687f21e","placeholder":"​","style":"IPY_MODEL_a32c830084914ebca468c6bf1ad476fa","value":" 614/614 [00:00&lt;00:00, 4854.16 examples/s]"}},"da52914f39894c479c776cccc1d6f170":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"365df20c9ce04355bae295f0447d55a1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bb126eb66df44bbe9ef2cd4a53a71636":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9a01682b084245c49e572a83a76adc61":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4a44b0dc9c2f4c7aa327be442e96f2bc":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"558b07c98a3c4fdcb8469caf9687f21e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a32c830084914ebca468c6bf1ad476fa":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4803830b6f4e4ba8be7ff7565dde51ea":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4e0f3b22a3e74df086733931a8ec59cc","IPY_MODEL_552138f375204ca5a1988bbb19df65b5","IPY_MODEL_37bbdbdc87e24105906a84452035fd0c"],"layout":"IPY_MODEL_300cb00ecda1431eaad33efdfc6540b7"}},"4e0f3b22a3e74df086733931a8ec59cc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e75ce71f753348e48fa4c2c04793df0b","placeholder":"​","style":"IPY_MODEL_91572180f08144dc96dd29bc4cbd6ea2","value":"Map: 100%"}},"552138f375204ca5a1988bbb19df65b5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_555e0936bb524a17bc96670a3749a77c","max":614,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4003fa5bb1324dcc98da304897ed2e6e","value":614}},"37bbdbdc87e24105906a84452035fd0c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_dee6b186e5b04b6cbeb01dcde66fed45","placeholder":"​","style":"IPY_MODEL_7f1333a8cf7a4736bbeb9426154fd603","value":" 614/614 [00:00&lt;00:00, 1499.12 examples/s]"}},"300cb00ecda1431eaad33efdfc6540b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e75ce71f753348e48fa4c2c04793df0b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"91572180f08144dc96dd29bc4cbd6ea2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"555e0936bb524a17bc96670a3749a77c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4003fa5bb1324dcc98da304897ed2e6e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"dee6b186e5b04b6cbeb01dcde66fed45":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7f1333a8cf7a4736bbeb9426154fd603":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","source":["#@title import\n","%%capture\n","!pip install seqeval evaluate accelerate ipymarkup ipdb -U\n","import torch\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")"],"metadata":{"id":"LOqq2hKLTzxp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#@title import things\n","from transformers import AutoTokenizer, DataCollatorForTokenClassification, AutoModelForTokenClassification, TrainingArguments, Trainer, pipeline\n","from datasets import load_dataset, Dataset, Features, Value, ClassLabel, DatasetDict\n","import evaluate\n","import numpy as np\n","import pandas as pd\n","import ipymarkup"],"metadata":{"id":"HUnCtR_RnzTY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%capture\n","# Copy the data from github\n","!wget \"https://raw.githubusercontent.com/KangGu96/COVID-19-News-Corpus/master/NER%20Dataset.csv\""],"metadata":{"id":"EJgI2e0eiMt-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(\"NER Dataset.csv\")\n","df = df.ffill()"],"metadata":{"id":"3C-nBvhHXqAr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"E2N9fiGdXtV4","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1716753178522,"user_tz":-120,"elapsed":63,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"ba67f098-994a-4e33-e3e2-1641ee21d4bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Sentence #         Word Tag\n","0  Sentence: 1          The   O\n","1  Sentence: 1        novel   O\n","2  Sentence: 1  coronavirus   O\n","3  Sentence: 1     infected   O\n","4  Sentence: 1           as   O"],"text/html":["\n","  <div id=\"df-bbddeb0e-def6-41ad-ad23-97eb5bb1760b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sentence #</th>\n","      <th>Word</th>\n","      <th>Tag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sentence: 1</td>\n","      <td>The</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Sentence: 1</td>\n","      <td>novel</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sentence: 1</td>\n","      <td>coronavirus</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sentence: 1</td>\n","      <td>infected</td>\n","      <td>O</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Sentence: 1</td>\n","      <td>as</td>\n","      <td>O</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbddeb0e-def6-41ad-ad23-97eb5bb1760b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bbddeb0e-def6-41ad-ad23-97eb5bb1760b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bbddeb0e-def6-41ad-ad23-97eb5bb1760b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a2011989-0871-40b9-afc6-2d44250a0b9a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2011989-0871-40b9-afc6-2d44250a0b9a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a2011989-0871-40b9-afc6-2d44250a0b9a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["df[\"Tag\"].value_counts()"],"metadata":{"id":"XfuWTRg3X921","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753178550,"user_tz":-120,"elapsed":85,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"fe4b4404-6505-4bb2-df84-25ed07300fd8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Tag\n","O        322054\n","B-geo      2473\n","I-geo      2058\n","I-sym      1473\n","B-tim      1277\n","I-tim      1253\n","B-sym       932\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["sentences = df.groupby('Sentence #')['Word'].apply(list)\n","word_labels = df.groupby('Sentence #')['Tag'].apply(list)\n","df = pd.concat([sentences, word_labels], axis=1)\n","df.reset_index(drop=True, inplace=True)\n","df.columns = ['tokens', 'ner_tags']\n","df"],"metadata":{"id":"2iQ7D__dlLqK","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1716753179888,"user_tz":-120,"elapsed":1404,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"7e94ea71-9759-4e3e-dbbe-01409f2c042c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  tokens  \\\n","0      [The, novel, coronavirus, infected, as, many, ...   \n","1      [But, at, the, time, of, the, first, two, case...   \n","2      [National, Institute, of, Allergy, and, Infect...   \n","3      [He'd, waited, four, hours, on, the, phone, to...   \n","4      [The, nonprofit, worked, with, telecommunicati...   \n","...                                                  ...   \n","15423  [\", Those, areas, have, had, relatively, high,...   \n","15424  [\", These, are, the, folks, who, are, keeping,...   \n","15425  [Those, folks, are, experiencing, the, burden,...   \n","15426  [\", The, state, released, a, public, awareness...   \n","15427  [Many, were, ignoring, calls, because, they, f...   \n","\n","                                                ner_tags  \n","0      [O, O, O, O, O, O, O, O, O, O, B-geo, O, O, O,...  \n","1      [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","2      [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","3                [O, O, O, O, O, O, O, O, O, O, O, O, O]  \n","4      [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","...                                                  ...  \n","15423  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","15424  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","15425                     [O, O, O, O, O, O, O, O, O, O]  \n","15426  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","15427      [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O]  \n","\n","[15428 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-f8d9d95e-b7ed-47ca-b446-687c2da43f6d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tokens</th>\n","      <th>ner_tags</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[The, novel, coronavirus, infected, as, many, ...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, B-geo, O, O, O,...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[But, at, the, time, of, the, first, two, case...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[National, Institute, of, Allergy, and, Infect...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[He'd, waited, four, hours, on, the, phone, to...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[The, nonprofit, worked, with, telecommunicati...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15423</th>\n","      <td>[\", Those, areas, have, had, relatively, high,...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>15424</th>\n","      <td>[\", These, are, the, folks, who, are, keeping,...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>15425</th>\n","      <td>[Those, folks, are, experiencing, the, burden,...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O]</td>\n","    </tr>\n","    <tr>\n","      <th>15426</th>\n","      <td>[\", The, state, released, a, public, awareness...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>15427</th>\n","      <td>[Many, were, ignoring, calls, because, they, f...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15428 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8d9d95e-b7ed-47ca-b446-687c2da43f6d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f8d9d95e-b7ed-47ca-b446-687c2da43f6d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f8d9d95e-b7ed-47ca-b446-687c2da43f6d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-26c2bc33-c139-4841-9eff-2399d2c88db7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26c2bc33-c139-4841-9eff-2399d2c88db7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-26c2bc33-c139-4841-9eff-2399d2c88db7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 15428,\n  \"fields\": [\n    {\n      \"column\": \"tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ner_tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":72}]},{"cell_type":"markdown","source":["# Undersampling"],"metadata":{"id":"fTXcvZ98SGTx"}},{"cell_type":"code","source":["# create a mask to identify sentences with no target entities\n","mask = (df['ner_tags'].apply(lambda x: all(tag == 'O' for tag in x)))\n","\n","# drop sentences with no target entities with probability 0.8\n","df = df[~mask | (mask & (np.random.rand(len(df)) > 0.85))]\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"HPD74abkSFUN","executionInfo":{"status":"ok","timestamp":1716753179888,"user_tz":-120,"elapsed":398,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"f841a774-a112-453f-964b-482200f8ef3e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  tokens  \\\n","0      [The, novel, coronavirus, infected, as, many, ...   \n","1      [But, at, the, time, of, the, first, two, case...   \n","7      [\", Others, say, large, scale, contact, tracin...   \n","11     [\", Once, you, see, a, big, escalation, in, ca...   \n","17     [George, Fallieras, of, Los, Angeles, returned...   \n","...                                                  ...   \n","15403  [Partners, in, Health, contact, tracers, are, ...   \n","15404  [With, the, stay, at, home, orders, leaving, t...   \n","15412  [Those, interviews, can, be, done, over, the, ...   \n","15422  [\", Partners, in, Health, has, sought, to, rai...   \n","15424  [\", These, are, the, folks, who, are, keeping,...   \n","\n","                                                ner_tags  \n","0      [O, O, O, O, O, O, O, O, O, O, B-geo, O, O, O,...  \n","1      [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","7      [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","11     [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","17     [O, O, O, B-geo, I-geo, O, O, O, O, O, O, B-ge...  \n","...                                                  ...  \n","15403  [O, O, O, O, O, O, O, O, O, O, O, O, O, B-geo,...  \n","15404  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","15412  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","15422  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","15424  [O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...  \n","\n","[4911 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-237c281d-5c6c-434e-a886-65a0b2996ac1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tokens</th>\n","      <th>ner_tags</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[The, novel, coronavirus, infected, as, many, ...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, B-geo, O, O, O,...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[But, at, the, time, of, the, first, two, case...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>[\", Others, say, large, scale, contact, tracin...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>[\", Once, you, see, a, big, escalation, in, ca...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>[George, Fallieras, of, Los, Angeles, returned...</td>\n","      <td>[O, O, O, B-geo, I-geo, O, O, O, O, O, O, B-ge...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15403</th>\n","      <td>[Partners, in, Health, contact, tracers, are, ...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, B-geo,...</td>\n","    </tr>\n","    <tr>\n","      <th>15404</th>\n","      <td>[With, the, stay, at, home, orders, leaving, t...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>15412</th>\n","      <td>[Those, interviews, can, be, done, over, the, ...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>15422</th>\n","      <td>[\", Partners, in, Health, has, sought, to, rai...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","    <tr>\n","      <th>15424</th>\n","      <td>[\", These, are, the, folks, who, are, keeping,...</td>\n","      <td>[O, O, O, O, O, O, O, O, O, O, O, O, O, O, O, ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4911 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-237c281d-5c6c-434e-a886-65a0b2996ac1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-237c281d-5c6c-434e-a886-65a0b2996ac1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-237c281d-5c6c-434e-a886-65a0b2996ac1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6efe7f69-46e0-4b72-96b6-f4578a806d35\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6efe7f69-46e0-4b72-96b6-f4578a806d35')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6efe7f69-46e0-4b72-96b6-f4578a806d35 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4911,\n  \"fields\": [\n    {\n      \"column\": \"tokens\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ner_tags\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["df.iloc[15][\"tokens\"], df.iloc[15][\"ner_tags\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zw6UMnYkpeLG","executionInfo":{"status":"ok","timestamp":1716753179895,"user_tz":-120,"elapsed":380,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"5069cf51-9a6e-4611-cbec-c2fbbb4604d2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(['Similarly',\n","  ',',\n","  'the',\n","  'loss',\n","  'of',\n","  'taste',\n","  'and',\n","  'smell',\n","  'was',\n","  'found',\n","  'to',\n","  'be',\n","  'associated',\n","  'with',\n","  'COVID',\n","  '19',\n","  'among',\n","  'otherwise',\n","  'asymptomatic',\n","  'patients',\n","  'by',\n","  'the',\n","  'American',\n","  'Academy',\n","  'of',\n","  'Otolaryngology',\n","  'Head',\n","  'and',\n","  'Neck',\n","  'Surgery',\n","  'and',\n","  'ENT',\n","  'UK',\n","  'in',\n","  'late',\n","  'March',\n","  '.'],\n"," ['O',\n","  'O',\n","  'O',\n","  'B-sym',\n","  'I-sym',\n","  'I-sym',\n","  'I-sym',\n","  'I-sym',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'O',\n","  'B-tim',\n","  'I-tim',\n","  'O'])"]},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","source":["# Splitting the dataset"],"metadata":{"id":"bJd7xvUkSgq8"}},{"cell_type":"code","source":["class_names = ['O','B-geo','I-geo','B-tim','I-tim','B-sym','I-sym']\n","classmap = ClassLabel(num_classes=7, names=class_names)\n","classmap"],"metadata":{"id":"zQGGPa30KhFk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753179897,"user_tz":-120,"elapsed":342,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"59cd29ac-8988-4e01-945b-4ab279e4f4b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ClassLabel(names=['O', 'B-geo', 'I-geo', 'B-tim', 'I-tim', 'B-sym', 'I-sym'], id=None)"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["raw_datasets = Dataset.from_pandas(df)\n","raw_datasets = raw_datasets.map(lambda y: {\"ner_tags\": classmap.str2int(y[\"ner_tags\"])})"],"metadata":{"id":"-GvZ8G4qywSe","colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["8e16aa0d1ea0423c8a314f9b13ff4028","3626f1c09fbe438798fa99e5fbb95279","51df811a58024b5c9e44c7efae1ef5c3","44a44cd9bf25449bbb53985bf4e25508","015ec6462cd44b539ae9cb5a233d8db9","d946112cd5de4413abe7dee852503b2d","45006750da5740e9a19fccaf0d0e92e3","0078ad77e41c4a9f807aec883f127b3f","e551293b3064443aaea983758e3d9dbb","85aded2b68b543e293c4b0653786897b","d24146c281fa49778ae6baefa46d505f"]},"executionInfo":{"status":"ok","timestamp":1716753179898,"user_tz":-120,"elapsed":313,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"078c33ca-0313-492e-983a-ade2aa93e935"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/4911 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8e16aa0d1ea0423c8a314f9b13ff4028"}},"metadata":{}}]},{"cell_type":"code","source":["# 90% train, 25% test + validation\n","train_testvalid = raw_datasets.train_test_split(test_size=0.25)\n","# Split the 25% test + valid in half test, half valid\n","test_valid = train_testvalid['test'].train_test_split(test_size=0.5)\n","# gather all to have a single DatasetDict\n","raw_datasets = DatasetDict({\n","    'train': train_testvalid['train'],\n","    'test': test_valid['test'],\n","    'valid': test_valid['train']})"],"metadata":{"id":"VlgHLKEtSOyP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["raw_datasets"],"metadata":{"id":"5GV_Ayo1zdtA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753179951,"user_tz":-120,"elapsed":349,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"80df4e6e-675a-41c2-f674-117f2d81abe4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DatasetDict({\n","    train: Dataset({\n","        features: ['tokens', 'ner_tags', '__index_level_0__'],\n","        num_rows: 3683\n","    })\n","    test: Dataset({\n","        features: ['tokens', 'ner_tags', '__index_level_0__'],\n","        num_rows: 614\n","    })\n","    valid: Dataset({\n","        features: ['tokens', 'ner_tags', '__index_level_0__'],\n","        num_rows: 614\n","    })\n","})"]},"metadata":{},"execution_count":78}]},{"cell_type":"code","source":["raw_datasets[\"train\"][20]"],"metadata":{"id":"zf8QaknCtYei","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753179951,"user_tz":-120,"elapsed":337,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"21ea0e8f-55b9-4224-fdab-f92b73deb1bd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'tokens': ['The',\n","  'Grand',\n","  'Princess',\n","  'outbreak',\n","  'was',\n","  'one',\n","  'of',\n","  'the',\n","  'key',\n","  'factors',\n","  'in',\n","  'the',\n","  'decision',\n","  'by',\n","  'the',\n","  'CDC',\n","  'to',\n","  'issue',\n","  'a',\n","  'no',\n","  'sail',\n","  'order',\n","  'for',\n","  'cruise',\n","  'ships',\n","  'on',\n","  'March',\n","  '14',\n","  '.'],\n"," 'ner_tags': [0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  0,\n","  3,\n","  4,\n","  0],\n"," '__index_level_0__': 4470}"]},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","source":["# Choosing the model"],"metadata":{"id":"Dtxc6VxkUX8-"}},{"cell_type":"code","source":["model_checkpoint = \"bert-base-cased\"\n","tokenizer = AutoTokenizer.from_pretrained(model_checkpoint)"],"metadata":{"id":"thMeeHr3bSAV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753181330,"user_tz":-120,"elapsed":1711,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"5ad7c995-f25b-4b39-961c-dc846a0ba305"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["max_length = 124\n","tokenizer.model_max_length = max_length"],"metadata":{"id":"5J-dKLs7FyTR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Tokenization"],"metadata":{"id":"Ja2FfuveUr3R"}},{"cell_type":"code","source":["def align_labels_with_tokens(labels, word_ids):\n","    new_labels = []\n","    current_word = None\n","    for word_id in word_ids:\n","        if word_id != current_word:\n","            # Start of a new word!\n","            current_word = word_id\n","            label = -100 if word_id is None else labels[word_id]\n","            new_labels.append(label)\n","        elif word_id is None:\n","            # Special token\n","            new_labels.append(-100)\n","        else:\n","            # Same word as previous token\n","            label = labels[word_id]\n","            # If the label is B-XXX we change it to I-XXX\n","            if label % 2 == 1:\n","                label += 1\n","            new_labels.append(label)\n","\n","    return new_labels"],"metadata":{"id":"wzW1ykbecUTF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def tokenize_and_align_labels(examples):\n","    tokenized_inputs = tokenizer(\n","        examples[\"tokens\"], truncation=True, is_split_into_words=True\n","    )\n","    all_labels = examples[\"ner_tags\"]\n","    new_labels = []\n","    for i, labels in enumerate(all_labels):\n","        word_ids = tokenized_inputs.word_ids(i)\n","        new_labels.append(align_labels_with_tokens(labels, word_ids))\n","\n","    tokenized_inputs[\"labels\"] = new_labels\n","    return tokenized_inputs"],"metadata":{"id":"dstqjUGTcVcZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tokenized_datasets = raw_datasets.map(\n","    tokenize_and_align_labels,\n","    batched=True,\n","    remove_columns=raw_datasets[\"train\"].column_names,\n",")"],"metadata":{"id":"5B15l-ZucZV-","colab":{"base_uri":"https://localhost:8080/","height":113,"referenced_widgets":["4c1b70e21fec4a00bf9aafb8fe7e1a21","ce38423118ac44119d578fed0bdf47a5","c17d37fa56174387bf383aec10a761eb","645059038c3948be9ef2f7158ac47460","0e71d30ccbf4484b9c592b0d4e6f09b2","0390347d81ab4bd292f84c317eb2ccfa","a92ccca3f5a44c2e9d3f70762f08d6c1","7bdbd55ceb18487bb27b9d62cda7ef9a","0f13c67ee2514bdcab1650cc3ed2acfb","ded824cba550421aaa39624b7e98d429","f3c3cd55c2834826ba3901ffcd653eb8","f4086c64785e406f833ca555cca837b1","2cf7c7fe43ed4d308d6785a67c5ec7d0","ba2dac36ba684b46a542e94298298223","18d8adf2704046c7ae884efa8f35f5b7","da52914f39894c479c776cccc1d6f170","365df20c9ce04355bae295f0447d55a1","bb126eb66df44bbe9ef2cd4a53a71636","9a01682b084245c49e572a83a76adc61","4a44b0dc9c2f4c7aa327be442e96f2bc","558b07c98a3c4fdcb8469caf9687f21e","a32c830084914ebca468c6bf1ad476fa","4803830b6f4e4ba8be7ff7565dde51ea","4e0f3b22a3e74df086733931a8ec59cc","552138f375204ca5a1988bbb19df65b5","37bbdbdc87e24105906a84452035fd0c","300cb00ecda1431eaad33efdfc6540b7","e75ce71f753348e48fa4c2c04793df0b","91572180f08144dc96dd29bc4cbd6ea2","555e0936bb524a17bc96670a3749a77c","4003fa5bb1324dcc98da304897ed2e6e","dee6b186e5b04b6cbeb01dcde66fed45","7f1333a8cf7a4736bbeb9426154fd603"]},"executionInfo":{"status":"ok","timestamp":1716753182023,"user_tz":-120,"elapsed":1483,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"5b484583-094b-4456-9ab7-26cd345a7429"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/3683 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4c1b70e21fec4a00bf9aafb8fe7e1a21"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/614 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f4086c64785e406f833ca555cca837b1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/614 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4803830b6f4e4ba8be7ff7565dde51ea"}},"metadata":{}}]},{"cell_type":"code","source":["tokenized_datasets[\"train\"].column_names"],"metadata":{"id":"XYxa6Bzg08VW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753182024,"user_tz":-120,"elapsed":97,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"127c8eaf-c89b-4366-e872-8b298cb8d979"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['input_ids', 'token_type_ids', 'attention_mask', 'labels']"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["tokenized_datasets"],"metadata":{"id":"47y57O3lcjGu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753182024,"user_tz":-120,"elapsed":69,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"59536c5a-6df0-46c0-c206-4aa72f735329"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DatasetDict({\n","    train: Dataset({\n","        features: ['input_ids', 'token_type_ids', 'attention_mask', 'labels'],\n","        num_rows: 3683\n","    })\n","    test: Dataset({\n","        features: ['input_ids', 'token_type_ids', 'attention_mask', 'labels'],\n","        num_rows: 614\n","    })\n","    valid: Dataset({\n","        features: ['input_ids', 'token_type_ids', 'attention_mask', 'labels'],\n","        num_rows: 614\n","    })\n","})"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["data_collator = DataCollatorForTokenClassification(tokenizer=tokenizer)\n","metric = evaluate.load(\"seqeval\")\n","\n","def compute_metrics(eval_preds):\n","    logits, labels = eval_preds\n","    predictions = np.argmax(logits, axis=-1)\n","\n","    # Remove ignored index (special tokens) and convert to labels\n","    true_labels = [[class_names[l] for l in label if l != -100] for label in labels]\n","    true_predictions = [\n","        [class_names[p] for (p, l) in zip(prediction, label) if l != -100]\n","        for prediction, label in zip(predictions, labels)\n","    ]\n","    all_metrics = metric.compute(predictions=true_predictions, references=true_labels)\n","    return {\n","        \"precision\": all_metrics[\"overall_precision\"],\n","        \"recall\": all_metrics[\"overall_recall\"],\n","        \"f1\": all_metrics[\"overall_f1\"],\n","        \"accuracy\": all_metrics[\"overall_accuracy\"],\n","    }"],"metadata":{"id":"eTh3WKmugQlb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["id2label = {i: label for i, label in enumerate(class_names)}\n","label2id = {v: k for k, v in id2label.items()}"],"metadata":{"id":"udMg43hLgahO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(id2label)"],"metadata":{"id":"LFxx0oF0gzPr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753182695,"user_tz":-120,"elapsed":45,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"2412ae82-2359-482a-cd9c-7e9e625fe62e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{0: 'O', 1: 'B-geo', 2: 'I-geo', 3: 'B-tim', 4: 'I-tim', 5: 'B-sym', 6: 'I-sym'}\n"]}]},{"cell_type":"code","source":["print(label2id)"],"metadata":{"id":"Xe6ig-0Sg1VO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753182696,"user_tz":-120,"elapsed":30,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"59709455-7992-40d8-97ff-88ac59e170b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'O': 0, 'B-geo': 1, 'I-geo': 2, 'B-tim': 3, 'I-tim': 4, 'B-sym': 5, 'I-sym': 6}\n"]}]},{"cell_type":"code","source":["model = AutoModelForTokenClassification.from_pretrained(\n","    model_checkpoint,\n","    id2label=id2label,\n","    label2id=label2id,\n",")"],"metadata":{"id":"FOAbXgvTgcLa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753184478,"user_tz":-120,"elapsed":1802,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"8e8717a5-223c-4302-dfb7-aa0930d87760"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Some weights of BertForTokenClassification were not initialized from the model checkpoint at bert-base-cased and are newly initialized: ['classifier.bias', 'classifier.weight']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]}]},{"cell_type":"code","source":["model.config.num_labels"],"metadata":{"id":"HWRCIFqSgrtF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716753184485,"user_tz":-120,"elapsed":58,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"6df36b6a-7125-44b2-baeb-d971274c7238"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["7"]},"metadata":{},"execution_count":92}]},{"cell_type":"markdown","source":["# Training"],"metadata":{"id":"FrexU_wloY6D"}},{"cell_type":"code","source":["args = TrainingArguments(\n","    \"bert-finetuned-ner\",\n","    evaluation_strategy=\"epoch\",\n","    save_strategy=\"epoch\",\n","    learning_rate=5e-5,\n","    num_train_epochs=5,\n","    weight_decay=0.01,\n","    fp16=True,\n","    # adam_epsilon = 1e-8,\n","    # per_device_train_batch_size=32,\n","    # per_device_eval_batch_size=64,\n","    load_best_model_at_end=True,\n","    metric_for_best_model=\"f1\",\n","    greater_is_better=True,\n","    # push_to_hub=True,\n",")"],"metadata":{"id":"Ykl6lOV9g5oN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["trainer = Trainer(\n","    model=model,\n","    args=args,\n","    train_dataset=tokenized_datasets[\"train\"],\n","    eval_dataset=tokenized_datasets[\"valid\"],\n","    data_collator=data_collator,\n","    compute_metrics=compute_metrics,\n","    tokenizer=tokenizer,\n",")\n","trainer.train()"],"metadata":{"id":"255d03Qvhe0c","colab":{"base_uri":"https://localhost:8080/","height":268},"executionInfo":{"status":"ok","timestamp":1716753400548,"user_tz":-120,"elapsed":216098,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"c76be112-9cc5-40dc-b48b-e8b4a1d1e65d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='2305' max='2305' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [2305/2305 03:36, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>No log</td>\n","      <td>0.089095</td>\n","      <td>0.632873</td>\n","      <td>0.768657</td>\n","      <td>0.694187</td>\n","      <td>0.970442</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>0.156100</td>\n","      <td>0.082478</td>\n","      <td>0.648819</td>\n","      <td>0.768657</td>\n","      <td>0.703672</td>\n","      <td>0.970562</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>0.074700</td>\n","      <td>0.102679</td>\n","      <td>0.649390</td>\n","      <td>0.794776</td>\n","      <td>0.714765</td>\n","      <td>0.969365</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>0.049900</td>\n","      <td>0.128193</td>\n","      <td>0.660287</td>\n","      <td>0.772388</td>\n","      <td>0.711952</td>\n","      <td>0.969724</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.029100</td>\n","      <td>0.149256</td>\n","      <td>0.659810</td>\n","      <td>0.777985</td>\n","      <td>0.714041</td>\n","      <td>0.970682</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["TrainOutput(global_step=2305, training_loss=0.0686791903026192, metrics={'train_runtime': 216.5128, 'train_samples_per_second': 85.053, 'train_steps_per_second': 10.646, 'total_flos': 527702957241570.0, 'train_loss': 0.0686791903026192, 'epoch': 5.0})"]},"metadata":{},"execution_count":94}]},{"cell_type":"markdown","source":["# Inference"],"metadata":{"id":"IJYjcCJWoVRt"}},{"cell_type":"code","source":["def display_marked_up_text(entities, text):\n","    spans = []\n","    for entity in entities:\n","        start = entity['start']\n","        end = entity['end']\n","        label = entity['entity_group'].upper()\n","        spans.append((start, end, label))\n","\n","    ipymarkup.show_span_box_markup(text, spans)"],"metadata":{"id":"oKMiyRIYc8p1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["token_classifier = pipeline(\n","    \"token-classification\", model=model.to(\"cpu\"), tokenizer=tokenizer, aggregation_strategy=\"simple\"\n",")"],"metadata":{"id":"HOVJhYLOiis9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def display_marked_up_texts(texts):\n","    for text in texts:\n","        marked_up_text = token_classifier(text)\n","        display_marked_up_text(marked_up_text, text)\n","\n","texts = [\n","    \"I've been experiencing a lot of fatigue and muscle pain lately, I'm worried I might have contracted a fever.\",\n","    \"Yesterday, January 20th, the doctor diagnosed me with influenza and prescribed some medication, I'm feeling much better now.\",\n","    \"After returning from my trip to South Africa, I had a severe case of malaria and was hospitalized for a week.\",\n","    \"I've been having some problem breathing lately and I'm worried it might be related to my trip to Madagascar.\",\n","    \"Japan had a problem of thousands of fever during the epidemic four months ago\",\n","    \"My sister has been dealing with chronic back pain for years, it's really affected her quality of life six days earlier.\",\n","    \"I'm so relieved that the antibiotics worked and my headache cleared up quickly.\",\n","    \"He was at the University of Capetown, when his fever took off\",\n","    \"The University of Madagascar was the location of the murder\",\n","    \"I don't think he will last that long, not even for this winter, so Tuesday is the day.\",\n","    \"Nagata Prefecture is close to here\"\n","]\n","\n","display_marked_up_texts(texts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":208},"id":"cmZmjaSxcgPy","executionInfo":{"status":"ok","timestamp":1716758681461,"user_tz":-120,"elapsed":7,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"8be61cff-51fc-4f07-8ab1-b4374a9b2b0e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">I&#x27;ve been experiencing a lot of <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #bbdefb; background: #e3f2fd\">fatigue<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #64b5f6;\">SYM</span></span> and <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #bbdefb; background: #e3f2fd\">muscle pain<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #64b5f6;\">SYM</span></span> lately, I&#x27;m worried I might have contracted a <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #bbdefb; background: #e3f2fd\">fever<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #64b5f6;\">SYM</span></span>.</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">Yesterday, <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #c8e6c9; background: #e8f5e9\">January 20th<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #66bb6a;\">TIM</span></span>, the doctor diagnosed me with <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #bbdefb; background: #e3f2fd\">in<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #64b5f6;\">SYM</span></span>fluenza and prescribed some medication, I&#x27;m feeling much better now.</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">After returning from my trip to <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #ffcdd2; background: #ffebee\">South Africa<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #e57373;\">GEO</span></span>, I had a severe case of malaria and was hospitalized for a week.</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">I&#x27;ve been having some <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #bbdefb; background: #e3f2fd\">problem breathing<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #64b5f6;\">SYM</span></span> lately and I&#x27;m worried it might be related to my trip to <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #ffcdd2; background: #ffebee\">Madagascar<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #e57373;\">GEO</span></span>.</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\"><span style=\"padding: 2px; border-radius: 4px; border: 1px solid #ffcdd2; background: #ffebee\">Japan<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #e57373;\">GEO</span></span> had a problem of thousands of fever during the epidemic four months ago</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">My sister has been dealing with <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #bbdefb; background: #e3f2fd\">chronic back pain<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #64b5f6;\">SYM</span></span> for years, it&#x27;s really affected her quality of life six days earlier.</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">I&#x27;m so relieved that the antibiotics worked and my <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #bbdefb; background: #e3f2fd\">headache<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #64b5f6;\">SYM</span></span> cleared up quickly.</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">He was at the University of Cape<span style=\"padding: 2px; border-radius: 4px; border: 1px solid #ffcdd2; background: #ffebee\">town<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #e57373;\">GEO</span></span>, when his fever took off</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">The University of Madagascar was the location of the murder</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\">I don&#x27;t think he will last that long, not even for this winter, so <span style=\"padding: 2px; border-radius: 4px; border: 1px solid #c8e6c9; background: #e8f5e9\">Tuesday<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #66bb6a;\">TIM</span></span> is the day.</div>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div class=\"tex2jax_ignore\" style=\"white-space: pre-wrap\"><span style=\"padding: 2px; border-radius: 4px; border: 1px solid #ffcdd2; background: #ffebee\">Nagata Prefecture<span style=\"vertical-align: middle; margin-left: 2px; font-size: 0.7em; color: #e57373;\">GEO</span></span> is close to here</div>"]},"metadata":{}}]},{"cell_type":"markdown","source":["# Evaluate on the test data"],"metadata":{"id":"QChF7_4Poc-e"}},{"cell_type":"code","source":["trainer_2 = Trainer(\n","    model=model,\n","    args=args,\n","    eval_dataset=tokenized_datasets[\"test\"],\n","    data_collator=data_collator,\n","    compute_metrics=compute_metrics,\n","    tokenizer=tokenizer,\n",")"],"metadata":{"id":"z-xpAVlooUWQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["trainer_2.evaluate()"],"metadata":{"id":"DfN8fLRApSJr","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"ok","timestamp":1716753404556,"user_tz":-120,"elapsed":2053,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"43e909f6-7aaf-46cb-f001-80522afab2c7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='77' max='77' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [77/77 00:01]\n","    </div>\n","    "]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["{'eval_loss': 0.10052656382322311,\n"," 'eval_precision': 0.6700143472022956,\n"," 'eval_recall': 0.7731788079470199,\n"," 'eval_f1': 0.7179093005380477,\n"," 'eval_accuracy': 0.971112757107857,\n"," 'eval_runtime': 1.5623,\n"," 'eval_samples_per_second': 393.002,\n"," 'eval_steps_per_second': 49.285}"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["tokenized_datasets"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_1-R8jw-epPF","executionInfo":{"status":"ok","timestamp":1716753445617,"user_tz":-120,"elapsed":33,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"62433411-21cd-4ba1-8734-40c0b6c54350"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DatasetDict({\n","    train: Dataset({\n","        features: ['input_ids', 'token_type_ids', 'attention_mask', 'labels'],\n","        num_rows: 3683\n","    })\n","    test: Dataset({\n","        features: ['input_ids', 'token_type_ids', 'attention_mask', 'labels'],\n","        num_rows: 614\n","    })\n","    valid: Dataset({\n","        features: ['input_ids', 'token_type_ids', 'attention_mask', 'labels'],\n","        num_rows: 614\n","    })\n","})"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["class_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ffQiXSNoeyVZ","executionInfo":{"status":"ok","timestamp":1716753518896,"user_tz":-120,"elapsed":32,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"019477ba-d4df-4cce-9ed7-5193d48e2435"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['O', 'B-geo', 'I-geo', 'B-tim', 'I-tim', 'B-sym', 'I-sym']"]},"metadata":{},"execution_count":103}]},{"cell_type":"markdown","source":["# Confusion matrix"],"metadata":{"id":"lLcMDbIEffrl"}},{"cell_type":"code","source":["predictions, labels, _ = trainer.predict(tokenized_datasets[\"valid\"])\n","predictions = np.argmax(predictions, axis=2)\n","\n","# Remove ignored index (special tokens)\n","true_predictions = [\n","    [class_names[p] for (p, l) in zip(prediction, label) if l != -100]\n","    for prediction, label in zip(predictions, labels)\n","]\n","true_labels = [\n","    [class_names[l] for (p, l) in zip(prediction, label) if l != -100]\n","    for prediction, label in zip(predictions, labels)\n","]\n","\n","results = metric.compute(predictions=true_predictions, references=true_labels)\n","results"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":307},"id":"AAXtgcSBejCc","executionInfo":{"status":"ok","timestamp":1716753534406,"user_tz":-120,"elapsed":2359,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"ea8e68da-5704-4ffa-8fce-474f424280f6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["{'geo': {'precision': 0.7258064516129032,\n","  'recall': 0.8241758241758241,\n","  'f1': 0.771869639794168,\n","  'number': 273},\n"," 'sym': {'precision': 0.46794871794871795,\n","  'recall': 0.6636363636363637,\n","  'f1': 0.5488721804511278,\n","  'number': 110},\n"," 'tim': {'precision': 0.6736842105263158,\n","  'recall': 0.8366013071895425,\n","  'f1': 0.7463556851311953,\n","  'number': 153},\n"," 'overall_precision': 0.649390243902439,\n"," 'overall_recall': 0.7947761194029851,\n"," 'overall_f1': 0.714765100671141,\n"," 'overall_accuracy': 0.96936516484174}"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","def plot_confusion_matrix(true_labels, pred_labels, label_list, normalize='true'):\n","    \"\"\"\n","    Plots a confusion matrix using matplotlib.\n","\n","    Args:\n","    - true_labels: list of lists containing the true labels.\n","    - pred_labels: list of lists containing the predicted labels.\n","    - label_list: list containing the label names.\n","    - normalize: {'true', 'pred', 'all'}, default='true'\n","        - Normalizes confusion matrix over the true (rows), predicted (columns) conditions or all the population.\n","\n","    Returns:\n","    - None\n","    \"\"\"\n","    # Flatten the lists\n","    true_labels_flat = [label for sublist in true_labels for label in sublist]\n","    pred_labels_flat = [label for sublist in pred_labels for label in sublist]\n","\n","    # Compute the confusion matrix\n","    cm = confusion_matrix(true_labels_flat, pred_labels_flat, labels=label_list, normalize=normalize)\n","\n","    # Plot the confusion matrix\n","    fig, ax = plt.subplots(figsize=(10, 8))\n","    disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=label_list)\n","    disp.plot(ax=ax, cmap=plt.cm.viridis, values_format='.2f')\n","\n","    plt.title('Confusion Matrix')\n","    plt.show()\n","\n","# Example usage:\n","# Assuming true_predictions and true_labels are already defined and label_list contains the list of labels\n","plot_confusion_matrix(true_labels=true_labels, pred_labels=true_predictions, label_list=class_names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":718},"id":"WjK99JxsfE54","executionInfo":{"status":"ok","timestamp":1716753572016,"user_tz":-120,"elapsed":1276,"user":{"displayName":"Ny Haingo Miantsatiana ANDRY","userId":"02576837319316170548"}},"outputId":"a666d8c2-c5a0-43c1-c32e-e30cd42aec99"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["---\n","**References 🙌**\n","> Hugginface NER\n","\n","- https://huggingface.co/learn/nlp-course/en/chapter7/2\n","\n","> For loading the data\n","\n","- https://stackoverflow.com/questions/75674773/creating-huggingface-dataset-to-train-an-bio-tagger\n","\n","- https://github.com/NielsRogge/Transformers-Tutorials/blob/master/BERT/Custom_Named_Entity_Recognition_with_BERT.ipynb\n","\n","> Splitting conundrum\n","\n","- https://discuss.huggingface.co/t/how-to-split-main-dataset-into-train-dev-test-as-datasetdict/1090"],"metadata":{"id":"zbQLLR8CmIw6"}}]}